@using PagedListDemo.Common
@model   PagedListDemo.Models.BooksModel.BooksModel

<style>
    #books-form .form-group {
        min-height: 60px;
    }
</style>

@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { id = "books-form", data_bind = "visible: isReady", @style = "display: none" }))
{
    <div data-bind="foreach: cards">
        <label>
            <input data-bind="value: bookId, checked: $root.selectedCards" type="checkbox" />
            <span data-bind="text: description"></span>
        </label>
    </div>
    <button data-bind="click: getCards" class="btn btn-default">Get cards</button>
    <pre data-bind="text: ko.toJSON(selectedCards, null, 2)"></pre>
    <pre data-bind="text: ko.toJSON(cards, null, 2)"></pre>


    @*@Html.ValidationSummary()*@
    <div class="row">
        <button class="btn btn-default" data-bind="click: getValues, visible: !isEditing()" type="button">Get List</button>
        <button class="btn btn-primary" data-bind="click: beginEdit, visible: !isEditing()" type="button">Edit</button>
        <button class="btn btn-danger" data-bind="click: archive, visible: !isEditing()" type="button">Delete</button>

        <button class="btn btn-default" data-bind="click: getValue, visible: isEditing" type="button">Get Value</button>
        <button class="btn btn-primary save" data-bind="click: update, visible: isEditing" type="button">Save</button>
        <button class="btn btn-success save" data-bind="click: add, visible: isEditing" type="button">Add</button>
    </div>
    <hr />
    <div class="form-inline">
        <label>Search term</label>
        @Html.TextBoxFor(x => x.Title,
        new
        {
            data_bind = "autocomplete: { source: getBooks, select: selectBook }",
            @class = "form-control"
        })

        <label>by</label>
        <select class="form-control"
                data-bind="value: autocompleteOptions().searchFor,
                options: searchForOptions,
                optionsText: 'Text' ,
                optionsValue: 'Value'"></select>
        <label>Max results</label>
        <input data-bind="value: autocompleteOptions().maxResults" type="number" class="form-control" min="1" value="" />
    </div>
    <hr />

    @*<pre data-bind="text: ko.toJSON(book, null, 2)"></pre>*@

    <div class="form-group col-sm-6">
        @Html.LabelFor(x => x.Author)
        <p data-bind="text: book().authorName, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.Author, new { @data_bind = "value: form().authorFirstName, visible: isEditing", @class = "form-control" })
        @Html.TextBoxFor(x => x.Author, new { @data_bind = "value: form().authorLastName, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Author)
    </div>
    <div class="form-group col-sm-6">
        @Html.LabelFor(x => x.BookId)
        <p data-bind="text: book().bookId, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.BookId, new { @data_bind = "value: form().bookId, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.BookId)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Description)
        <p data-bind="text: book().description, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.Description, new { @data_bind = "value: form().description, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Description)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.PublishDate)
        @Html.DisplayFor(x => x.PublishDate)
        @Html.EditorFor(x => x.PublishDate)

        <p data-bind="text: book().publishDate, visible: !isEditing()"></p>
        <div data-bind="visible: isEditing" class="input-group date">
            @*@Html.TextBoxFor(x => x.PublishDate, new { @data_bind = "value: form().publishDate", @class = "form-control" })*@
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>

        @Html.ValidationMessageFor(x => x.PublishDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Title)
        <p data-bind="text: book().title, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.Title, new { @data_bind = "value: form().title, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Title)
    </div>


    <div class="form-group">
        <div class="radio-button-toggle btn-group">
            <label class="btn btn-default radio-button-toggle-true" for="conferencing-true">
                @Html.RadioButton("Conferencing", true, Model.Conferencing, new { id = "conferencing-true" })
                Yes
            </label>
            <label class="btn btn-default radio-button-toggle-false" for="conferencing-false">
                @Html.RadioButton("Conferencing", false, !Model.Conferencing, new { id = "conferencing-false" })
                No
            </label>
        </div>
        @Html.LabelFor(x => x.Conferencing)
        @Html.ValidationMessageFor(x => x.Conferencing)
    </div>

    <div class="form-group">
        <div class="radio-button-toggle btn-group">
            <label class="btn btn-default radio-button-toggle-true" for="share-transport-true">
                @Html.RadioButton("ShareTransport", true, Model.ShareTransport, new { @data_bind = "value: book().ShareTransport", id = "share-transport-true" })
                Yes
            </label>
            <label class="btn btn-default radio-button-toggle-false" for="share-transport-false">
                @Html.RadioButton("ShareTransport", false, !Model.ShareTransport, new { @data_bind = "value: book().ShareTransport", id = "share-transport-false" })
                No
            </label>
        </div>
        @Html.LabelFor(x => x.ShareTransport)
        @Html.ValidationMessageFor(x => x.ShareTransport)

        @Html.TextBoxFor(x => x.SharingMessage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.SharingMessage)
    </div>

    <div class="form-group">
        @Html.CheckBox("AcceptAndAgree", Model.AcceptAndAgree)
        @Html.LabelFor(x => x.AcceptAndAgree)
        @Html.ValidationMessageFor(x => x.AcceptAndAgree)
    </div>

    <input id="submit" class="btn btn-primary" type="submit" name="submit" value="Submit" />
}