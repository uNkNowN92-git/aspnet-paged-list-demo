@using PagedListDemo.Common
@model   PagedListDemo.Models.BooksModel.BooksModel

<style>
    #books-form .form-group {
        min-height: 60px;
    }
</style>
@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { id = "books-form", data_bind = "visible: isReady", @style = "display: none" }))
{
    @*@Html.ValidationSummary()*@
    <div class="row">
        <button data-bind="click: beginEdit, visible: !isEditing()" type="button">Edit</button>
        <button data-bind="click: save, visible: isEditing" class="save" type="button">Save</button>
    </div>

    <div class="form-group col-sm-6">
        @Html.LabelFor(x => x.Author)
        <p data-bind="text: book().author, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.Author, new { @data_bind = "value: form().author, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Author)
    </div>
    <div class="form-group col-sm-6">
        @Html.LabelFor(x => x.BookId)
        <p data-bind="text: book().bookId, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.BookId, new { @data_bind = "value: form().bookId, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.BookId)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Description)
        <p data-bind="text: book().description, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.Description, new { @data_bind = "value: form().description, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Description)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.PublishDate)
        <p data-bind="text: book().publishDate, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.PublishDate, new { @data_bind = "value: form().publishDate, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.PublishDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Title)
        <p data-bind="text: book().title, visible: !isEditing()"></p>
        @Html.TextBoxFor(x => x.Title, new { @data_bind = "value: form().title, visible: isEditing", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Title)
    </div>


    <div class="form-group">
        <div class="radio-button-toggle btn-group">
            <label class="btn btn-default radio-button-toggle-true" for="conferencing-true">
                @Html.RadioButton("Conferencing", true, Model.Conferencing, new { id = "conferencing-true" })
                Yes
            </label>
            <label class="btn btn-default radio-button-toggle-false" for="conferencing-false">
                @Html.RadioButton("Conferencing", false, !Model.Conferencing, new { id = "conferencing-false" })
                No
            </label>
        </div>
        @Html.LabelFor(x => x.Conferencing)
        @Html.ValidationMessageFor(x => x.Conferencing)
    </div>

    <div class="form-group">
        <div class="radio-button-toggle btn-group">
            <label class="btn btn-default radio-button-toggle-true" for="share-transport-true">
                @Html.RadioButton("ShareTransport", true, Model.ShareTransport, new { id = "share-transport-true" })
                Yes
            </label>
            <label class="btn btn-default radio-button-toggle-false" for="share-transport-false">
                @Html.RadioButton("ShareTransport", false, !Model.ShareTransport, new { id = "share-transport-false" })
                No
            </label>
        </div>
        @Html.LabelFor(x => x.ShareTransport)
        @Html.ValidationMessageFor(x => x.ShareTransport)

        @Html.TextBoxFor(x => x.SharingMessage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.SharingMessage)
    </div>

    <div class="form-group">
        @Html.CheckBox("AcceptAndAgree", Model.AcceptAndAgree)
        @Html.LabelFor(x => x.AcceptAndAgree)
        @Html.ValidationMessageFor(x => x.AcceptAndAgree)
    </div>

    <input id="submit" class="btn btn-primary" type="submit" name="submit" value="Submit" />
}